#-*- Makefile -*-
#
# ${R_HOME}/src/library/Makefile

srcdir = .
top_srcdir = ../..
top_builddir = ../..

include ../gnuwin32/MkRules
include ../../share/make/vars.mk

ECHO = echo
MKINSTALLDIRS = mkdir -p
INSTALL_DATA = cp
RVER = $(shell cut -d' ' -f1 ../../VERSION | sed -n 1p)

R_EXE = $(top_builddir)/$(BINDIR)/Rterm --vanilla --slave

.SUFFIXES: .Rdts

all: R

## beware there is a bootstrapping problem here: tools uses tools to
## dump its namespace. So it works initially, but not to update.
R:
	@$(MKINSTALLDIRS) $(top_builddir)/library
	@for pkg in $(R_PKGS_BASE); do \
	  $(MAKE) -C $${pkg} -f Makefile.win R_ARCH=$(R_ARCH) \
		R_OSTYPE=windows VERSION=$(RVER) BINDIR=$(BINDIR) \
	        all install-tests || exit 1; \
	done
	@(cd base && $(MAKE) -f Makefile.win BINDIR=$(BINDIR) mkdesc)
	@$(ECHO) "tools:::.vinstall_package_descriptions_as_RDS(\"$(top_builddir)/library\", \"$(R_PKGS_BASE)\")" | \
	  R_DEFAULT_PACKAGES=tools LC_ALL=C $(R_EXE) > /dev/null
	@$(ECHO) "installing parsed NAMESPACE files"
	@rm -f $(top_builddir)/library/tools/Meta/nsInfo.rds
	@$(ECHO) "tools:::.vinstall_package_namespaces_as_RDS(\"$(top_builddir)/library\", \"$(R_PKGS_BASE)\")" | \
	  R_DEFAULT_PACKAGES=tools LC_ALL=C $(R_EXE) > /dev/null
	@gzip -9f ../../library/grDevices/afm/*.afm

bytecode: R
	@for pkg in $(R_PKGS_BASE); do \
	  $(ECHO) "--- compiling R code in package '$${pkg}' ---"; \
          touch $(top_builddir)/src/library/$${pkg}/all.R; \
	  $(MAKE) -C $${pkg} -f Makefile.win R_ARCH=$(R_ARCH) \
	    R_OSTYPE=windows VERSION=$(RVER) BINDIR=$(BINDIR) \
	    R_COMPILE_PKGS=1 R_COMPILER_SUPPRESS_ALL=1 all; \
	done

## do Rdobjects before metadata before help indices
docs:
	@$(MAKE) -f Makefile.win Rdobjects
	@$(MAKE) -f Makefile.win metadata
	@$(MAKE) -f Makefile.win help-indices
ifeq ($(strip $(BUILD_HTML)),YES)
	@$(MAKE) -f Makefile.win Rdfiles
endif
	@touch stamp-docs

# fix the order to make best use of parallel builds
RD-TS = base.Rdts stats.Rdts utils.Rdts methods.Rdts graphics.Rdts grDevices.Rdts datasets.Rdts grid.Rdts tools.Rdts tcltk.Rdts splines.Rdts stats4.Rdts compiler.Rdts
# RD-TS = $(R_PKGS_BASE:=.Rdts)
Rd-ts: $(RD-TS)

%.Rdts:
	@$(ECHO) "options(warn=1);tools:::.install_package_Rd_objects(\"$(srcdir)/$*\", \"$(top_builddir)/library/$*\")" | R_DEFAULT_PACKAGES=NULL $(R_EXE) || exit 1
	@$(ECHO) -n " $*$(ECHO_C)"

Rdobjects:
	@$(ECHO) -n "installing parsed Rd:"
	@$(MAKE) -f Makefile.win Rd-ts
	@$(ECHO)

help-indices:
	@$(ECHO) -n "writing indices for package:"
	@for pkg in $(R_PKGS_BASE); do \
	  $(ECHO) -n " $${pkg}" ; \
	  $(ECHO) "options(warn=1);tools:::.writePkgIndices(\"$${pkg}\", \"$(top_builddir)/library/$${pkg}\")" | R_DEFAULT_PACKAGES=utils LC_ALL=C $(R_EXE) || exit 1; \
	done
	@$(ECHO)

## FIXME: do this in parallel (but avoid interleaving output)
Rdfiles:
	@$(ECHO) "building all R object docs"
	@for pkg in $(R_PKGS_BASE); do \
	  $(ECHO) "tools:::.convertRdfiles(\"$(srcdir)/$${pkg}\", \"$(top_builddir)/library/$${pkg}\", silent = TRUE)" | LC_ALL=C $(R_EXE) || exit 1; \
	done

metadata:
	@$(ECHO) "building/updating package metadata ..."
	@$(ECHO) "tools:::.vinstall_package_indices(\"$(srcdir)\", \"$(top_builddir)/library\", \"$(R_PKGS_BASE)\")" | \
	  R_DEFAULT_PACKAGES=tools LC_ALL=C $(R_EXE) > /dev/null

clean:
	@for pkg in $(R_PKGS_BASE); do \
	  $(MAKE) --no-print-directory -C $${pkg} \
	    -f Makefile.win R_ARCH=$(R_ARCH) clean-win; \
	done
	-@rm -f stamp-*

